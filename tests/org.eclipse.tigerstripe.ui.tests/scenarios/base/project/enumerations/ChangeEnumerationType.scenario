--- Q7 testcase ---
Q7-vendor: www.xored.com/q7
Format-Version: 1.0
Element-Name: ChangeEnumerationType
Tags: TS_Project/Edit/Artifacts/Enumeration
External-Reference: http://docs.xored.com/display/TS/ChangeEnumerationType
Element-Version: 3.0
Contexts: _IhHLkKwQEd-DHcdNat_asw
Save-Time: 1/18/12 1:27 PM
Id: _omHxAYXZEeC_HYrDuY0PAA

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Entry-Name: .description
Content-Type: text/plain

Enumerator type can be changed. Constants of new type are created

Precondition:
EmptyProject

Steps:
    Create Enumeration of Int type
    Open Enumeration in editor and check base type on details tab.
    Update base type from 'Int' to 'String'. Save changes
    Check empty problems view
    Add constant and check its type 'String' and value. Save changes
    Update base type from 'String' to 'Int'. Save changes
    Check error message in problems view
    Remove 'String' constant
    Add constant and check its type 'Int' and value. Save changes
    Check empty problems view

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Entry-Name: .content
Content-Type: text/ecl

get-view "Tigerstripe Explorer" | get-tree | select "New Project" | get-menu "New/Enumeration" | click
get-window "Create a new Enumeration" | get-editbox -after [get-label "Name:"] | set-text Enum
get-window "Create a new Enumeration" | get-combo -after [get-label "Base Type:"] | get-property selection | equals int 
    | verify-true
get-window "Create a new Enumeration" | get-button Finish | click
get-editor Enum | get-tab-folder | get-tab-item Details | click
with [get-editor Enum | get-section "Implementation Specifics" | get-combo -after [get-label "Base Type:"]] {
    get-property selection | equals int | verify-true
    get-property values -index 0 | equals int | verify-true
    get-property values -index 1 | equals String | verify-true
}
get-editor Enum | get-section "Implementation Specifics" | get-combo -after [get-label "Base Type:"] | set-text String
get-button "Save \(.*\)" | click
get-menu "Project/Clean..." | click
get-window Clean | get-button OK | click
get-view Problems | get-tree | get-property itemCount | equals 0 | verify-true
with [get-editor Enum] {
    get-tab-folder | get-tab-item Overview | click
    get-section Constants | get-section | get-button Add | click
}
with [get-editor Enum | get-section Constants | get-section -index 1 | get-combo -after [get-label "Type:"]] {
    get-property enablement | equals false | verify-true
    get-property selection | equals String | verify-true
    get-property readOnly | equals true | verify-true
}
get-editor Enum | get-section Constants | get-section -index 1 | get-editbox -after [get-label "Value:"] 
    | get-property value | equals "\"0\"" | verify-true
with [get-editor Enum | get-section Constants | get-section | get-table | get-item "literal0=\"0\""] {
    get-property columns -index 0 | equals "literal0=\"0\"" | verify-true
    get-property columns -index 1 | equals "\"0\"" | verify-true
}
get-button "Save \(.*\)" | click
with [get-editor Enum] {
    get-tab-folder | get-tab-item Details | click
    get-section "Implementation Specifics" | get-combo -after [get-label "Base Type:"] | set-text int
}
get-button "Save \(.*\)" | click
get-view Problems | get-tree | get-item "Errors \\(1 item\\)" | get-property columns -index 0 
    | equals "Errors (1 item)" | verify-true
get-view Problems | get-tree 
    | get-item "Errors \\(1 item\\)/The type of label \'literal0\' in \'org.eclipse.Enum\' is incompatible with the defined base type for this Enumeration Artifact \\( expected=\'int\', found=\'String\'\\)." 
    | get-property caption 
    | equals "The type of label \'literal0\' in \'org.eclipse.Enum\' is incompatible with the defined base type for this Enumeration Artifact ( expected=\'int\', found=\'String\')." 
    | verify-true
with [get-editor Enum] {
    get-tab-folder | get-tab-item Overview | click
    with [get-section Constants | get-section] {
        get-table | select "literal0=\"0\""
        get-button Remove | click
    }
}
get-window "Remove Constant" | get-button Yes | click
get-button "Save \(.*\)" | click
get-window "Save Enumeration" | get-button Yes | click
get-editor Enum | get-section Constants | get-section | get-button Add | click
with [get-editor Enum | get-section Constants | get-section -index 1 | get-combo -after [get-label "Type:"]] {
    get-property enablement | equals false | verify-true
    get-property selection | equals int | verify-true
    get-property readOnly | equals true | verify-true
}
get-editor Enum | get-section Constants | get-section -index 1 | get-editbox -after [get-label "Value:"] 
    | get-property value | equals 0 | verify-true
with [get-editor Enum | get-section Constants | get-section | get-table | get-item "literal0=0"] {
    get-property columns -index 0 | equals "literal0=0" | verify-true
    get-property columns -index 1 | equals 0 | verify-true
}
get-view Problems | get-tree | get-property itemCount | equals 0 | verify-true
get-button "Save \(.*\)" | click
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
------=_.q7.content-3d2e0690-ce48-3609-83e0-c704d49f1eaf
Content-Type: q7/binary
Entry-Name: .q7.content

UEsDBBQACAAIAAAAIQAAAAAAAAAAAAAAAAAIAAAALmNvbnRlbnR9kc1uwjAQhO+V+g6R79i0PVBFGBRB
pKD+iBYO0Etk2UtwG9tgmya8fZcKoh5Qb9bO+NPs7HDcmjr5Bh+0s5zc0T5JwEqntK04OcRN75GMR7c3
Q+kMbZ0HRfcDGiRY4bVLF+dH0hqddpT7EwW5NqQ452Qb4y5lrGka6kxFna/Y6mV2sVwld59QZb8q2w/Y
RaUgcUQSKwxwMtkKW0FuDwa8iJhgedyh2MV5OMXRipPSmaLN1quPHCZlsfbTw7o/zzKSRFEFTpaLcu7d
J8jIcqUjy3zUGyFjYH/YaEY6JyBrbKqN4K2o32EDHmuDLrZyMpy3Om2gdNjV4siWC3Y9LVacJFiyjcgM
o3K2LZ6/npq3XPWmhVSvIpYiNEPWOfAk7P+boOUHUEsHCOKhxt0kAQAA3gEAAFBLAQIUABQACAAIAAAA
IQDiocbdJAEAAN4BAAAIAAAAAAAAAAAAAAAAAAAAAAAuY29udGVudFBLBQYAAAAAAQABADYAAABaAQAA
AAA=
------=_.q7.content-3d2e0690-ce48-3609-83e0-c704d49f1eaf--
------=_.content.raw-c2dfba28-ebef-3afe-bd39-76376d333cc9
Content-Type: q7/binary
Entry-Name: .content.raw

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
------=_.content.raw-c2dfba28-ebef-3afe-bd39-76376d333cc9--
