--- Q7 testcase ---
Q7-vendor: www.xored.com/q7
Format-Version: 1.0
Element-Name: 359870_GenerateResultDialogBoxMessages
Tags: TS_Generator, I43 
External-Reference: 
Element-Version: 3.0
Contexts: _FGfSUKthEd-v8JwXbnu_tQ,_TLUSEd7KEeC1arm-KQmhig,_9D6jAatgEd-v8JwXbnu_tQ,_rp5wMQ9DEeGS_rReFf4A9w
Save-Time: 12/9/11 11:05 AM
Id: _lS-boA9JEeGS_rReFf4A9w

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Entry-Name: .description
Content-Type: text/plain

Check different message types in Generate Result Dialog Box

Precondition
GeneratorWithDifferentMessages

Steps
1. Deploy generators
2. Check enabled generators
3. Generate
4. In Generate Result Dialog Box check both generators
5. Check messages of different types
6. Open stack trace for message
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Entry-Name: .content
Content-Type: text/ecl

get-view "Tigerstripe Explorer" | get-tree | select "SimpleGenerator29/ts-plugin.xml" | double-click -nowait
get-editor "SimpleGenerator29/ts-plugin.xml" | get-section Testing | get-link "Package and deploy this generator" 
    | click -nowait
get-window "Deploy new generator" | get-button OK | click
get-window "SimpleGenerator29 Generator" | get-button OK | click
get-view "Tigerstripe Explorer" | get-tree | select "New Generator Project/ts-plugin.xml" | double-click -nowait
get-editor "New Generator Project/ts-plugin.xml" | get-section Testing | get-link "Package and deploy this generator" 
    | click -nowait
get-window "Deploy new generator" | get-button OK | click
get-window "New Generator Project Generator" | get-button OK | click
get-view "Tigerstripe Explorer" | get-tree | select "model-refactoring/tigerstripe.xml" | double-click -nowait
with [get-editor "model-refactoring/tigerstripe.xml"] {
    get-tab-folder | get-tab-item "Generator Settings" | click
    with [get-section "New Generator Project(3.0) (enabled) [Generic]"] {
        mouse-release 9 4 button1 524288
        click -nowait
    }
}
get-editor "model-refactoring/tigerstripe.xml" | get-section "New Generator Project(3.0) (enabled) [Generic]" 
    | get-button "Enable Generator" | get-property enablement | equals true | verify-true
get-editor "model-refactoring/tigerstripe.xml" | get-section "SimpleGenerator29(0.0.0) (enabled) [Generic]" | click 
    -nowait
get-editor "model-refactoring/tigerstripe.xml" | get-section "SimpleGenerator29(0.0.0) (enabled) [Generic]" 
    | get-button "Enable Generator" | get-property enablement | equals true | verify-true
get-view "Tigerstripe Explorer" | get-tree | select "model-refactoring" | get-menu "Generate..." | click
get-window "Generate Tigerstripe Project" | get-button Finish | click
with [get-window "Generate Tigerstripe Project" | get-window "Generation Result" | get-tree 
    | get-item "New Generator Project\\(3.0\\)"] {
    get-property childCount | equals 5 | verify-true
    get-property columns -index 0 | equals "New Generator Project(3.0)" | verify-true
    get-property columns -index 1 | equals "org.eclipse.tigerstripe.workbench.base" | verify-true
}
with [get-window "Generate Tigerstripe Project" | get-window "Generation Result" | get-tree 
    | get-item "SimpleGenerator29\\(0.0.0\\)"] {
    get-property childCount | equals 0 | verify-true
    get-property columns -index 0 | equals "SimpleGenerator29(0.0.0)" | verify-true
    get-property columns -index 1 | equals "org.eclipse.tigerstripe.workbench.base" | verify-true
}
get-window "Generate Tigerstripe Project" | get-window "Generation Result" | get-tree 
    | get-item "New Generator Project\\(3.0\\)/message ok" | get-property caption | equals "message ok" | verify-true
get-window "Generate Tigerstripe Project" | get-window "Generation Result" | get-tree 
    | select "New Generator Project\\(3.0\\)/message ok" | double-click -nowait
get-window "Generate Tigerstripe Project" | get-window "Generation Result" | get-window "Log Entry Details" | get-editbox 
    -after [get-label "Details:"] | get-property rawValue | equals "An exception stack trace is not available." 
    | verify-true
get-window "Generate Tigerstripe Project" | get-window "Generation Result" | get-window "Log Entry Details" | get-button OK | click
with [get-window "Generate Tigerstripe Project" | get-window "Generation Result" | get-tree 
    | get-item "New Generator Project\\(3.0\\)/message info"] {
    get-property columns -index 0 | equals "message info" | verify-true
    get-property columns -index 1 | equals "plugin.id" | verify-true
}
with [get-window "Generate Tigerstripe Project" | get-window "Generation Result" | get-tree 
    | get-item "New Generator Project\\(3.0\\)/message warning"] {
    get-property columns -index 0 | equals "message warning" | verify-true
    get-property columns -index 1 | equals "plugin.id" | verify-true
}
with [get-window "Generate Tigerstripe Project" | get-window "Generation Result" | get-tree 
    | get-item "New Generator Project\\(3.0\\)/message error with stack trace"] {
    get-property columns -index 0 | equals "message error with stack trace" | verify-true
    get-property columns -index 1 | equals "plugin.id" | verify-true
}
get-window "Generate Tigerstripe Project" | get-window "Generation Result" | get-tree 
    | select "New Generator Project\\(3.0\\)/message error with stack trace" | double-click -nowait
get-window "Generate Tigerstripe Project" | get-window "Generation Result" | get-window "Log Entry Details" | get-editbox 
    -after [get-label "Details:"] | get-property rawValue 
    | equals ".*java.lang.NumberFormatException: For input string.*" | verify-true
with [get-window "Generate Tigerstripe Project" | get-window "Generation Result"] {
    get-window "Log Entry Details" | get-button OK | click
    get-tree | select "New Generator Project\\(3.0\\)/multi status message"
}
with [get-window "Generate Tigerstripe Project" | get-window "Generation Result" | get-tree 
    | get-item "New Generator Project\\(3.0\\)/multi status message"] {
    get-property childCount | equals 3 | verify-true
    get-property columns -index 0 | equals "multi status message" | verify-true
    get-property columns -index 1 | equals "plugin.id" | verify-true
}
with [get-window "Generate Tigerstripe Project" | get-window "Generation Result" | get-tree 
    | get-item "New Generator Project\\(3.0\\)/multi status message/message1"] {
    get-property childCount | equals 0 | verify-true
    get-property columns -index 0 | equals message1 | verify-true
    get-property columns -index 1 | equals "plugin.id" | verify-true
}
get-window "Generate Tigerstripe Project" | get-window "Generation Result" | get-button OK | click
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
------=_.q7.content-3d2e0690-ce48-3609-83e0-c704d49f1eaf
Content-Type: q7/binary
Entry-Name: .q7.content

UEsDBBQACAAIAAAAIQAAAAAAAAAAAAAAAAAIAAAALmNvbnRlbnSNkdFOwjAUhu9NfIem124FAccWBkEZ
RJALGCTcLWU7lJm1hbaw+fYWIxiMGu/a83/92nPa6VW8QEdQOpcixHW3hhGIVGa5YCE+mI3Txr3u7U0n
ldytpILM3XuuTkFQlcsg/lygiufBxXJ/sliv0IGth3hrzC4gpCxLV3LmSsXIavp8Rn40Xw7ZlHykZO+R
c+pCaksYCcohxI2W3/ZqyQgEKGpgDvpQmEFOC8keZTUFrSkDjb+6bJzel2chTorYWcu+P45gFCdqDsNN
s++XGBnKdIgX8Vkq1R16bjaQTd529kpIC2yngpCdizBQGd1NhqNNvJyYbZQ5x/a4XK3FITGzDrkQ3/jF
yzKOMm8SwVOdKu5MZnybs995f/Dw2qeG/devdq1yOvMH171d8afNX99qkXdQSwcIhnlBKjIBAAAhAgAA
UEsBAhQAFAAIAAgAAAAhAIZ5QSoyAQAAIQIAAAgAAAAAAAAAAAAAAAAAAAAAAC5jb250ZW50UEsFBgAA
AAABAAEANgAAAGgBAAAAAA==
------=_.q7.content-3d2e0690-ce48-3609-83e0-c704d49f1eaf--
------=_.content.raw-c2dfba28-ebef-3afe-bd39-76376d333cc9
Content-Type: q7/binary
Entry-Name: .content.raw

UEsDBBQACAAIAAAAIQAAAAAAAAAAAAAAAAAIAAAALmNvbnRlbnTtXVtz27iSft6t2v/A1UlNOQ+hxKsk
zzhnncSZyTlxkoo9yVZN5gGWYIkxRWpIynLm158GwJskgqIkkqIkvLgsEmw0uoHuD0Cj8cs/nya29Ig9
33Kdi5Yid1oSdgbu0HJGF61ZcP+i1/rny//5718G7kR+cj08lAPs20gewP/y1HMDd+Dasofm57fk+c0A
O8izXOlpYp3HZFVCFipy/HN4ftEaB8H0vN2ez+eyOxnJrjdq///1u7iIv1hkrtESaqejQLH3N4MxnqAX
luMHyBng6KtcBmN6bSjWpsXatFibFGvH7cDkZyGK8tBCIw9N1lAOS21CGGRZkN02FC1AeWatoTezFqnQ
HwsqwAPbmvqY6gFP7oku1PYV/QY6hySR7jFBztCXQHnnwY8pfJ7byvMbbONB8Jp9xogAmSEKkPRgOcOL
1hWr8iv8cOctaTKzA2tqWwMr+AH9tNVm9bajiqti44uFofYpCgLsQU++tUbQqQPPmmLp6mlqAzFvlbmQ
DlCaIg87gWQtN0jRWtntHGJ/ANQDOm7Stb2QwpLSJxsF9643CWVApEAYrkkgtx7GBVtMZNdvpQVZDccB
YxpEFjMMDyYRG4RjRW2l+Y/5AMWOX95Yk6mNf8UO9lDgemr/lzZ9ni4T+C+m9mxkOTKMkdT7ndl/487u
bPwaRPmwGffVq/pqaIE4Ur1/RVDtBbGc1kCA4Q9vECgvbR+wH4DrLCoJKuB4iITy3ktr3lvOQ6odn9Dg
AY2wBKVBE2DnfkjB2PKlUaT7oi2MhaS3VuVWRUvZSJLmVjD+iqzgonWPbB9nDi3SZqWVFkBdIyvq5LG8
3zAZO3i+uYiPYzi9mgUBGPBEJB//XVAAYcvN1pJwF5qcKeAqGvoruKMABbGV3rIDZ/VXJiIlHkmhyErq
tGS0vHU9xnxUvU9+0crpc6UX1b3QxvrHy4onkn4Vw2arYdPNHTZ5cj7M0WPscfT0Kxo9uwLgD2AVY71K
nzz3O1ATIDgbBGcKSwDhEoCw0jkJJGw0EwmrAgk3Yzzt7NJ7p4KEzf35crXTECSc6Y4EGt5y6PRzh846
WR/mKOrucRQpDUXEE3eI7RcevkcDUCwAmSw0nAyAU8bDK6JqLwnmtEzQLbp769rD4ttCDPoqTYC+wPu7
AE9Syk2sHYwpAuj9gs2KxZD00lgwB2YmQ6mkG0KlVKedVPeDNjKndple8EyTO8+lM+yQwsPn0h+0hDX4
s3HDINq5P792Zz6OGi89XbTA+QODeku6o46Q8Bpy8/sUHrozqOWrNQzGF62upkRPfsPWaAyzKxU+pGq7
Rv7DRctQdbXXy+xQiVRN7lSwztlfLfwcyoZ/Tf5N39y/rWWkMT6wdrOhNsF7rkw+rmirNp+LxdLr1rRS
dOn72AtaEjDuWWD84AOmEWIiWtIjsmfwKPBm2fYjnEf0MucRUJZ+fwt8pBiiMUbnV2+gDeRNSxpDxy4Y
c/SPdvvqlevaGJU2WRHWacE6mSdnnVY2us46cqcU26TXYJu2cvZ94exrGk5dMZxKG07Gcbr61MznAHx9
svotfP3BhR73j9kabRienKwz7jk+2dxyMbp6iV5jZ5YvUWAlNHxYluWFlfKlRcGclh7GWiARRjzZpJKp
cxVQa8ieY6RtKW0lwhm9MElrwcJby7H88UYbk4nDzRRNrkIObIiFCEPZ466kvqfV9mbgjsqHe9KZj3G4
88X3Gfsgq83GvdKscV8m/gpbqBZrYSi8vTSKbYqugUCZ69vfyAL3t+frMFG3ckyUMe0bjC17+NqdpaZ9
RqZFJs1PlthTe58VzffeOUFZxi6r2a49mzh+3Gb+vkRLggbjp4tWpxFiuQmI3atRMsBGzFLa2kbPXiEf
f6JBz7GklCOUlPDbeNkZCb+9zqtpR++39SPx2ytL1d/YWvV6r91riNfOcU/asXpt3gZDEZ9do1AO3Gcf
rKSEz8bL0yvhs9d5NOPofXb+GfnD8dmbzbXJFgr2fXKKz31Y59T7e3HqiKogtuIJu3zbrAvbfOi2+aiD
QMu1zfkHs47ANmsFd3gqtc0FdqqTRYCiiQSy7HKOVa7l8FRmK4RlK82yGcKyFR33h7bDk3FiP0CWXfRg
WNjqA9j1eY/usL3azvPNGpq/EBjJbj8+Cj/l9lV0Dw1n+SGIKOLlLiaYdjNbnYGuPTT/QlBxDK8vHQk/
DTDlhpzZGjxIgYcGWLJ8yXEDCT0CeyQmUs52ICC3JIqJCFGg7wP0UUcdlV2ujyq4bnBkPio/NVojfNSu
CS+0dbliqjPU1YeQxRhjDyFkMQAWIWSVGO+eMN5Fh/jRL53oTVg62euytuXcu2sWtlVOupuKF7aXtifT
DBfYqlUPNmiogCzCfJHWsMBO7OEKQrisyGUd9SGHUl2WfmhrYpu7rANY/6rWZc2R5yznVcvwWlqTvFbI
cxHHZR6qvS7bcR2sIITjwss7k8JxrTPrRx/2qx9L2O/Wjgt7HnxAUq2ktw7W+TG9SX4suwlF3Fr3UK15
2W7tYAUh3Frk1kRkbGGjX3An5IDdWv4+SHOir/LyhGwZfbXWodUTkZXVMmHtSrN2WyTUPlVrd2gbJqXs
dhsHsIlSSkSWkb+4eEgRWUnSuPUhWXtsdpGQrO/oEck2ckbyh9nkDntvwZag4CqK0jqX4AHA8ukskHyK
h8+ln/6aucHPf80x++eb89M/nvo/o0BaQ0sGO/WOUGLA+ux358Fx54504868AX6eReedE2AY7DJI1cfw
o9xviPRAboH82oVvnoIrJ/B+yCMcUBGdLTwl9M9VLfW1P3NksNGkZ8kfUGA94mscjN3h5WAADh6aOpna
suU8ug+4c8YKSKzEdkT47UgTeQNdfYTIjQFbEEqEGJFjRNZ+SE4/oikajLH8iG2XDCB5FlikxsBz/SlD
V/Lv0CnoD8LNsy/YZuQXeEsXCaXeN9ZU5c2cwJpgpnJPdsB/ypc3tyHz+AkPoPOfJU8YWX1Lsp/xPYZB
PsBpyslDRryj7Uoc/g6xl0W7r29Bmx3c/UD+DSmnnlC6mtJbQ/cWwxck29wEeyN8Fv9kbBnLbGWdh527
3sMdtGVMugY4E2THRos4cpksBoxoCKg3s7Ev/2q7d8iOavoMz2QgNAKCZxmvKCOKqe7CCFuNSPhgp3YJ
+SuqbteLOch4RTnodcpmgP7HqluoPf2cNd5YVuIWdTOCv7kzH+zIUmujp6zLLA+hrSsDY3tvLdcVPgy7
V3+HusIb14gRulbiuVpciFX33nWnZ+nXtGLT2KU7ran488xZrdFYGeAl1Ohl1aSZWyoQTS2ZmA85BcZD
LP4bYBQ7ZgOsBK8Ea2tns7EysxIm5tbfyBv6cVUyTMRTtYFsv9IS8j1N/PcJJt1nvCKUmb65My+E/s0V
m2Mz0s9UKvvVF9GA5Sn7+zBYUu0rFAzGH6eRekP3Ez84W3rPVMwbNqvk/wXlr8ncMyFBOM94TCl3VZ6p
odRi2h72KV7w5a8gOh98CqZ0k19MEP0urzMSVmMOX5N/Ir7oD/q53u12i7QUlIYoGmHsUE1CN6CpmC+H
aArFYu4yXzJmO7yu8v2etMiNRQWSQ3YIJZ+lf9yOPYyGbFymHof0VQXoc09BJBlQxCmIA10XEif1Ci8c
HFp+iHLWhQ4gZ8SupyCM/P2Nwz4FES/87uEURNx36j0FsfH2TyM6eZHtH06i0K22f4h46I11M18K94Jq
TSx/Mi72qG9TKtfFFtyGbYyL3dzSFNxcOsL4qXx7sywuau6akmFR4wYCJcGRx5ZhMUtfBULE6hRIo0PE
DlcQwnNHnlukCCjq18yGXVBSvuc2Cx5KOlXPnUSUKevc+n5yLG6SOFmrMbtizW491FERV36wKSbLduUH
KwjhyiNXLk7fFnZ0BY/4NMaV77r8axZc2K/Qs1e/DGzscRm4W2QZOOT5Gk2nMNSk8OVFq93+v6igvOKr
/IzLBDmRzrHaBi4JBrPXtnFmnUf9IbkhN7waV7pzvSH2vlrBmHQuKbACGy/bjxXbkPTBOzR4GHkARgCR
2IDCoOqLlkoSmYwAEjnh/3fUU5F/U5GdQAmnPk29uSMPoVkXLdMAIUC3Vw2V3Ao+pFx2yCG0MbZGY2iF
2eulOnIkklAxi6oorp4VD+rHF63G5nfxntUNdMGuw13VRIbo4+txaxM4EzeJoQ6lreopYRuKXr6w1Wxh
0yTmnFwvG0ibTY9WpU1IIMshV59Gj6iljfcuoqcWICWKtlOrZ1w9kK3VSA/k/1AP8O8melgnemKZIjbj
R9HcZeVCkaVJTFQu8F+E0BEAwPJEp71MvzRtr9zM5qcuRU+wzdKd6BsoPPyUP8BWBNReEEXdY43sLYYK
75J8IZHCNV0tf6yZHOnHV7Unmdwzbm/fQAuvWdEMNdQzhIjvYOLtJbZM62qJfLsViLebLd73lvOQnHCA
HzFy2LaifnZFIXBY3gSuAzG8weCqfkgOnkujaGjVN5T6HZ1qW+9rsbYNkmsq0raS6j/lwQQOjGPINLnY
YgGpbqaGaEqw8TAqR7ShKPspSaoLAzG88OPlx3+DVMP/y5YyB41RDJ7cXbYIybeuTM8dWcvxNXWMrBV/
lSx61j/AjI7KGWBVuCuFgxbCAZY9FRQDbFMpc1ABG2D9cgeYyhnNDLYpnToQYObGwQmhQJUz5Uown3HU
MLBXMQxUV8IsEhyolooDVY6BDN3VchSSAILVAEGVY0FDP2UKP1WKlDnTK7Y22ynXT2kcbB+OrOXotzpG
VqbbOh0wqHGQQzjIumKQlSJlDjZgg0wpeZBxRnQIBpU6wODazdGjhoJaj7P6ju7eujYYoWQFPnqy3TJ8
/LVETgs+YnJ49KL18RF7j3Q/JEB34Sp7NyXwKZTyX0alyCo1+b30OrGJNzggmRp8TkGAJuSkvjOw8Noi
P6Q3Fhp5aMIpeDl8RM4AD9fV+RYNcMB7yfI+LL4sT7WcRUJQBc38l1JsKhpk+/p0jsdklkMt13LoHIid
zFfM45nCGNQukMiPyC5oKbugVrAnp/M2ChY2qDnXvta/Qb1VgEttZn1Pm9h6vnNVhXOt2rnqHOeaWKTu
qRgppd+pQL4cDxfOCHpVzggktkNOZMh+s6pej3ESvlS90Ml66Q8q+8iuKGmhm1mThyvalGTeWNlUwuAt
9S44Ec6hQuFEGuFEDN5SMXMiunAiVTsRYy3S7R+bE1FJnHokYEVPG7QKsK7BC0laMFOcE1TCTDXDTPHm
K8xMGcJMVW6meLON2CallvOEndpGwpzZRBgX3xFod69o1ywU0885vSPcSCPciJkT+J8cxxCR/2WJOy/0
n3NBhAj954f+r4zp+sL6TU7cJBFyvNJIfmylSfIhOxIeGu/kMJssy1k6jo7CauQTf4CGOHyz68aDyZkt
sF0OrdxdDpPj8sOLWJdTFdThRXJPTdZmrHr9LjVX6Sgfkp4qjuqqIsrHzF1uTPbGDzcAgYwYhQpWSQS7
Phzhl//94/Wby9vLP356SxMD//nny8pgVjd3l1Evd/x1eWsvC/chc66VFJiuEZiumxvRry4nQxE2tFIb
2s0NWE2iBPahjfBYfH0KMMMB0Uk2zcxOJ9GA3qlg06zLWSqjoJuTlrME0G1bDva/WL51Z0dQDNoJuMxb
epgC3Wq9oNsw0yGM3UVXx7KuJPjzOkok52Hf+hulGhBSSysviwC7IiGVtIVLSTGq6Aac9ToCs5PYgMU0
MRt2gyXEnhm+SrI1PYdCcU4jsryzIrXsVE/0WyIQVmblI96FA9GzV8gPr/rIIFLxUhZZj43Uqxvpble+
qntF9mETRyhQTANRTI+zVBIqb/m6boFiKkUxPc68INTGct4hgWLK1wAH1VMUw8m2K1BMU1BM7irmJmkd
q1vQ7HEmKhQfaVXgo5Vz3mcduUPR0XJevxTG4X10wLCIrD51ekm/0aqGR5xlvUV4xLlkXcCjRsCjfu5p
vSRnnIBHdcCjPmfCEWpjH+lpTgwe9fN2VjlZiwU8Ogh4tOLxvzGXXyc46nPmPxQccXIM7waOwmzPkvuQ
AYKSlzmwJ86TXD+qMVnckpKAGrNiTNMvEtOqivNbjcY0nIX6UHn7yEBwypiGs14eZuXeayjGiWAa3lF1
chODIjDNAWOaDZZ8pMUrOqjPrwv2KJ1COymcm2iFW22EW4Uqci25CAip1a8qndy9FE1EhFTuWJVOboiU
to/Nxeiq4tpED2YhMkfJoR4jLXujijAMpcOZqb1Hd9iON7Lor60Ez77MioKP/Hko6vMaLX8qFWM6M18V
4uVFO+GnIDlhAD+2w4zkwzV9Wo1varp0JPw0wFTs5BaywYMUeGiAJcuXHDeQ0CPogZCSCaRCw4+O/aPu
8N8wW2ZyCkRPY0ttEZ96aP6FNO1l8Zb90o4/Kl3VvGwbC+BMnONtNjjLzWyv7XXr4ATBGS/D/fK1ogKc
VQbOeOnvQxXsJ8XviYAzhTNVDE/8qCd74qfS6x44E0J2wsco94SPwkt+v4gaegI1NBk1KPmL82KrpGbU
kHtsVRd7JTWgBl7yV7JZUt2temKzRGyWRF1Q5cwdaPLhSk4YRc20nHs3N2o2XbDRISNaKoWTVm3IiMK7
tWQRCYkENo1GQmruUr4uNrfqRUL59/PoYnOreiTEu5uHIiFNIKHTRELM89eHhXJOWyfx8FVgoTnyHOAr
lruaA4fCso1GRKkFwH7FQbQK7w6oBeiThP4JRNRERMS7Nip0weLkdL2IiHe/VKgOcXS6ekSkcSZ6FBHp
AhGdJiKKnX9toEjjzFUpKOpWCYqw54F45mAH0tEqsSa0HIyU/WmjIVM35XAXO3gVxoWXB3wBM4nT1M3G
TPkbOHsN+zhFzJQbFKXvIwTk1DCTzpkKUsxUXapqgZkajZl4YKA2CMW9BnPB22rC2zbZ2+r5ezYieqVe
b6vn7tkYInqlBm+be/Td2McuZu0xr92uUmeoK++2WHp+KLm6SRxE2la+vNPr+Cno1XwQ6Tt6RLKNnJH8
YTa5w95bcLMouIpO8JxL8AAQ1nQWSMT0O6Nz6ae/Zm7w819zzP6RJBRIa8jIoIF3hMgNpXH2u/PguHNH
YpeeP18i8c4JMLgaeYo8H8OPMooTaYGcApncGAYSugJ5/pBHOKAHkM4WnhLS56rGPvRnjgwohaA2+QMi
19Vf42DsDi8HA0B+0KzJ1JYt59F9wJ0zVkBiJTb+PpPx9PdvoLuMELlifjMaiawiSuz7vG9IakA0RYMx
lh+x7Q6s4Ic8CyxSD/REf8pQrPw7KJv+IDw8+4JtRnmBo3SRULh9g1+LB1MXa4KZPj3ZAaAoX97chizj
JzyYBfgsecIo6ptT/IzvsYedAU4TTR4yuh1tB7rwF8ZcFtm+vhlZlurpA/k3JJp6QklqSo9P8hZDYXJF
zgR7I3wW/2TMGClmstJBzl3v4Q6YHxPlY89BNrM2U4YCZbKuOaJn+ryZjX35V9u9Q3ZUyWd4JgOhERA8
y3hFeVBMdUse2JpqwgKbFhLKV1SrrhdXnvGKVt7rlFg3/Y/VtFBx+jlrstHbqVpG6zd35oNBWGpj9JT1
DKOEesBC3lvL1YQPw17U366aEUO0xJpcK/HsOy7EanrvutOz9Gtap2ls2WvW1Pl55qxWZvS3HCacyrys
SjRzc2WhqSUTYyCnZmjhBO03QBx2zAEMfF4J1sJO4YEws5L659bfyANgE9Uif8DzVEUgzK+0hHxPrwT6
hMAC8YpQPvrmLmwQ0jdXDPwwqs9UKuzVF9FAzFDs92GwpMZXKBiMP04jVYY+I35wtvSeqTNjTKxS/hcU
vSbrIcnXhN+Mx5RoV80wHJRQTNbDPvXlvvwVZOWDN8CUZPKLtbzfzehuhMGYr9fkn4gb+oN+qXe73TVN
A90gChIYE1RhoGgKTC+HgPSxF/OU+ZKx2MnoDN/vSRPcWCwgJWSHGO5Z+sftmJyeZ0Mt9TgkrSrPD+14
fXy/1hbAvQWYvfXN+a+d8foyjXUIfLvy20B29uUOmH1jAtm874jalwVWCLazjyrH7fxqtgbuG5Msitx3
IJwL3TejWwy782muBe/Jp3tE71syUQ58L7HyjfD7TvVuAuBLqKgQgt+unh0hfCWVcjF8qbVxQfzGtZSK
4ovWXjWM34WPrXD8aoWlAfkipLdA8qtkt4fy2SwWwvJrWlcemM+oqDQ0/82h981WllfKKHQKQCT9bPQe
u5F7CsAQF4TUu8du5J4CMMQNIdXvsRu5eVeNfcR4Hvseu8EJ9AnTSWkinVQFIXIGJ5yHpZMyS04nZeQl
qRe3K59anCg4EouEhgYzXwqDRmuMDjULIVdTINcmI1czH7nuNfj/BJGrmY9c9xqseyLI1cw7vyru/hU+
tlYfm3OINUkNUeoh1owGx0oAd8TaSjpXGF87tuxh2B8zT7ZmCrDB51lTKUAURa/4PKtZJKt8kghbYKhG
YqjcA5TmXo90nCCG6uZmlTf3mqTuRDBUlzOroBhKXBAsMFSdGKrLmVNRDFXldcI5uWGVZkKgbn85pYdR
dRa0bpEM+ZrIC9toBNTNzZBv7jXt1ikioNwEK+Zet6NPBQFx5gThZpwhNuMq8PQ9DvJnm3HdgptxhJ8M
iU89N3DBIcsemp/fkuc3AxC9Z7nwzX8AUEsHCLX1OCpCGQAAIXgBAFBLAQIUABQACAAIAAAAIQC19Tgq
QhkAACF4AQAIAAAAAAAAAAAAAAAAAAAAAAAuY29udGVudFBLBQYAAAAAAQABADYAAAB4GQAAAAA=
------=_.content.raw-c2dfba28-ebef-3afe-bd39-76376d333cc9--
