<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:tns="http://org.eclipse.tigerstripe/xml/tigerstripeExport/v1-0" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://org.eclipse.tigerstripe/xml/tigerstripeExport/v1-0" version="1.1">
    <xs:element name="tigerstripeProject">
        <xs:complexType>
            <xs:sequence>
            <xs:choice>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:artifact"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:artifactFile"/>
            </xs:choice>
            </xs:sequence>
            <xs:attribute name="name" type="xs:string" use="required"/>
            <xs:attribute name="version" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="artifact">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="1" minOccurs="0" ref="tns:implements"/>
                <xs:element maxOccurs="1" minOccurs="0" name="comment" type="xs:string"/>
                <xs:element maxOccurs="1" minOccurs="0" ref="tns:stereotypes"/>
                <xs:element maxOccurs="1" minOccurs="0" ref="tns:literals"/>
                <xs:element maxOccurs="1" minOccurs="0" ref="tns:fields"/>
                <xs:element maxOccurs="1" minOccurs="0" ref="tns:methods"/>           
                <xs:choice>
                    <xs:element maxOccurs="1" minOccurs="0" ref="tns:enumerationSpecifics"/>
                    <xs:element maxOccurs="1" minOccurs="0" ref="tns:associationSpecifics"/>
                    <xs:element maxOccurs="1" minOccurs="0" ref="tns:associationClassSpecifics"/>
                    <xs:element maxOccurs="1" minOccurs="0" ref="tns:dependencySpecifics"/>
                    <xs:element maxOccurs="1" minOccurs="0" ref="tns:querySpecifics"/>
                    
                </xs:choice>
            </xs:sequence>
                <!-- The name and extendedArtifact are the FQNs of the artifacts not the simple name -->
            <xs:attribute name="name" type="xs:string" use="required"/>
            <xs:attribute name="extendedArtifact" type="xs:string" use="optional"/>
            <xs:attribute name="artifactType" type="xs:string" use="optional"/>
            <xs:attribute name="isAbstract" type="xs:boolean" use="required"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="artifactFile">
        <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required"/>
            <xs:attribute name="artifactType" type="xs:string" use="optional"/>
            <xs:attribute name="fileName" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="fields">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:field"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="field">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="1" minOccurs="0" ref="tns:stereotypes"/>
                <xs:element maxOccurs="1" minOccurs="0" name="comment" type="xs:string"/>
            </xs:sequence>
            <xs:attribute name="name" type="xs:string" use="required"/>
            <xs:attribute name="visibility" type="xs:string" use="required"/>
            <!-- The value in type is the FQN of the type -->
            <xs:attribute name="type" type="xs:string" use="required"/>
            <xs:attribute name="typeMultiplicity" type="xs:string" use="required"/>
            <xs:attribute name="readonly" type="xs:boolean" use="required"/>
            <xs:attribute name="unique" type="xs:boolean" use="required"/>
            <xs:attribute name="ordered" type="xs:boolean" use="required"/>
            <xs:attribute name="defaultValue" type="xs:string" use="optional"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="literals">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:literal"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="literal">
         <xs:complexType>
             <xs:sequence>
                 <xs:element maxOccurs="1" minOccurs="0" ref="tns:stereotypes"/>
                 <xs:element maxOccurs="1" minOccurs="0" name="comment" type="xs:string"/>
             </xs:sequence>
             <xs:attribute name="name" type="xs:string" use="required"/>
             <xs:attribute name="value" type="xs:string" use="required"/>
             <!-- The value in type is the FQN of the type -->
             <xs:attribute name="type" type="xs:string" use="required"/>
             <xs:attribute name="visibility" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="methods">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:method"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="method">
         <xs:complexType>
             <xs:sequence>
                 <xs:element maxOccurs="1" minOccurs="0" ref="tns:stereotypes"/>
                 <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:arguments"/>
                 <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:exceptions"/>
                 <xs:element maxOccurs="1" minOccurs="0" name="comment" type="xs:string"/>
                 <xs:element maxOccurs="1" minOccurs="0" ref="tns:returnStereotypes"/>
             </xs:sequence>
             <xs:attribute name="name" type="xs:string" use="required"/>
             <xs:attribute name="visibility" type="xs:string" use="required"/>
             <!-- The value in type is the FQN of the type -->
            <xs:attribute name="returnType" type="xs:string" use="optional"/>
            <xs:attribute name="returnTypeMultiplicity" type="xs:string" use="optional"/>
            <xs:attribute name="isVoid" type="xs:boolean" use="required"/>            
            <xs:attribute name="isAbstract" type="xs:boolean" use="required"/>
            <xs:attribute name="unique" type="xs:boolean" use="required"/>
            <xs:attribute name="ordered" type="xs:boolean" use="required"/>
            <xs:attribute name="defaultReturnValue" type="xs:string" use="optional"/>
            <xs:attribute name="methodReturnName" type="xs:string" use="optional"/>
         </xs:complexType>
    </xs:element>
    
    <xs:element name="arguments">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:argument"/>
            </xs:sequence>
        </xs:complexType>    
    </xs:element>
    
    <xs:element name="argument">
         <xs:complexType>
             <xs:sequence>
                <xs:element maxOccurs="1" minOccurs="0" ref="tns:stereotypes"/>
                <xs:element maxOccurs="1" minOccurs="0" name="comment" type="xs:string"/>
             </xs:sequence>   
             <xs:attribute name="name" type="xs:string" use="required"/>
             <xs:attribute name="typeMultiplicity" type="xs:string" use="required"/>
             <!-- The value in type is the FQN of the type -->
             <xs:attribute name="type" type="xs:string" use="optional"/>
             <xs:attribute name="unique" type="xs:boolean" use="required"/>
             <xs:attribute name="ordered" type="xs:boolean" use="required"/>
             <xs:attribute name="defaultValue" type="xs:string" use="optional"/>
         </xs:complexType>
    </xs:element>
    
    <xs:element name="exceptions">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:exception"/>
            </xs:sequence>
        </xs:complexType>    
    </xs:element>
 
    <xs:element name="exception">
         <xs:complexType>
             <!-- The value in name is the FQN -->
             <xs:attribute name="name" type="xs:string" use="required"/>
         </xs:complexType>
    </xs:element>
    
    <xs:element name="stereotypes">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:stereotype"/>
            </xs:sequence>
        </xs:complexType>    
    </xs:element>
    
    <xs:element name="returnStereotypes">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:stereotype"/>
            </xs:sequence>
        </xs:complexType>    
    </xs:element>
    
    <xs:element name="stereotype">
         <xs:complexType>
             <xs:sequence>
                 <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:stereotypeAttribute"/>
             </xs:sequence>
             <xs:attribute name="name" type="xs:string" use="required"/>
         </xs:complexType>
    </xs:element>
    
    <xs:element name="stereotypeAttribute">
         <xs:complexType>
             <xs:sequence>
                 <xs:element maxOccurs="unbounded" minOccurs="0" name="value" type="xs:string"/>
             </xs:sequence>
                 <xs:attribute name="name" type="xs:string" use="required"/>
                 <xs:attribute name="array" type="xs:boolean" use="required"/>
         </xs:complexType>
    </xs:element>
    
    <xs:element name="implements">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="implementedInterface" maxOccurs="unbounded" minOccurs="0" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <!-- Specific content for each Artifact Type -->
    
    <xs:element name="enumerationSpecifics">
         <xs:complexType>
             <xs:attribute name="baseType" type="xs:string" use="required"/>
         </xs:complexType>
    </xs:element>
    
    <xs:element name="associationSpecifics">
        <xs:complexType>
             <xs:sequence>
                 <xs:element maxOccurs="2" minOccurs="2" ref="tns:associationEnd"/>
             </xs:sequence>
         </xs:complexType>
    </xs:element>
    
        <!-- Note, the two associationEnds are AEnd and ZEnd -->
    <xs:element name="associationEnd">
         <xs:complexType>
             <xs:sequence>
                 <xs:element maxOccurs="1" minOccurs="0" ref="tns:stereotypes"/>
                 <xs:element maxOccurs="1" minOccurs="0" name="comment" type="xs:string"/>
             </xs:sequence>
             <xs:attribute name="name" type="xs:string" use="required"/>
                 <!-- the value for "end" cannot be extracted from the model and so is set in the template -->            
             <xs:attribute name="end" type="xs:string" use="required"/>
                 <!-- The value in type is the FQN of the type -->
             <xs:attribute name="type" type="xs:string" use="required"/>
             <xs:attribute name="multiplicity" type="xs:string" use="required"/>
             <xs:attribute name="aggregation" type="xs:string" use="required"/>
             <xs:attribute name="changeable" type="xs:string" use="required"/>
             <xs:attribute name="navigable" type="xs:boolean" use="required"/>
             <xs:attribute name="ordered" type="xs:boolean" use="required"/>
             <xs:attribute name="visibility" type="xs:string" use="required"/>
             <xs:attribute name="unique" type="xs:boolean" use="required"/>
         </xs:complexType>
    </xs:element>
    
    
    <xs:element name="associationClassSpecifics">
        <xs:complexType>
             <xs:sequence>
                 <xs:element maxOccurs="2" minOccurs="2" ref="tns:associationEnd"/>
             </xs:sequence>
         </xs:complexType>
    </xs:element>
    
    <xs:element name="dependencySpecifics">
         <xs:complexType>
                 <!-- The value in EndTypeName is the FQN of the type -->
             <xs:attribute name="aEndTypeName" type="xs:string" use="required"/>
             <xs:attribute name="zEndTypeName" type="xs:string" use="required"/>
         </xs:complexType>    
    </xs:element>
    
    <xs:element name="querySpecifics">
         <xs:complexType>
                 <!-- The value in returnedTypeName is the FQN of the type -->
             <xs:attribute name="returnedTypeName" type="xs:string" use="required"/>
             <xs:attribute name="returnedTypeMultiplicity" type="xs:string" use="required"/>
         </xs:complexType>     
    </xs:element>
    

   
</xs:schema>
