/*******************************************************************************
 * Created with Tigerstripe(tm) Workbench v.$runtime.getProperty("tigerstripe.feature.version")
 * Copyright (c) 2007 Cisco Systems, Inc.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * DO NOT EDIT THIS FILE - Created with Tigerstripe(tm) Workbench
 *
 *******************************************************************************/
#if ($wizard.get("packageName") != "")
package $wizard.get("packageName");
#end
/**
 * $!wizard.get("artifactDescription")
 *
 * @tigerstripe.managedEntity primary-key="$wizard.get("primaryKeyType")"
 *      extensibilityType="multi"
 *		isAbstract = "$wizard.get("isAbstract")"
 * @tigerstripe.key-interface package = "$wizard.get("interfacePackage")"
 *      generate = "$wizard.get("generate")"
 * @tigerstripe.value package = "$wizard.get("interfacePackage")"
 *      generate = "$wizard.get("generate")"
 *
 * @tigerstripe.property ts.id="ossj.entity.create"
#foreach( $key in $wizard.get("ossj.entity.create").keySet())
 *   $key = "$wizard.get("ossj.entity.create").getProperty($key)"
#end *
 * @tigerstripe.property ts.id="ossj.entity.get"
#foreach( $key in $wizard.get("ossj.entity.get").keySet())
 *   $key = "$wizard.get("ossj.entity.get").getProperty($key)"
#end *
 * @tigerstripe.property ts.id="ossj.entity.set"
#foreach( $key in $wizard.get("ossj.entity.set").keySet())
 *   $key = "$wizard.get("ossj.entity.set").getProperty($key)"
#end *
 * @tigerstripe.property ts.id="ossj.entity.remove"
#foreach( $key in $wizard.get("ossj.entity.remove").keySet())
 *   $key = "$wizard.get("ossj.entity.remove").getProperty($key)"
#end *
 */
public abstract class $wizard.get("artifactName")
#if( $wizard.get("extendedArtifact") != "" )
  extends $wizard.get("extendedArtifact")
#end {
#foreach($labelRef in $wizard.get("constantList"))
    /**
     * $!labelRef.Description
     * @tigerstripe.label
     *  value = '$labelRef.Value'
     *  
     * @uml.property name="$labelRef.Name" multiplicity="(0 1)"
     * 
     */
    public final static $labelRef.getLabelClass() $labelRef.Name = $labelRef.Value;

#end

#foreach($attributeRef in $wizard.get("attributes"))
    /**
     * $!attributeRef.Description
     * @tigerstripe.field 
     *  isOptional = "$attributeRef.isOptional()"
     *  isReadOnly = "$attributeRef.isReadOnly()"
     *  isUnique = "$attributeRef.isUnique()"
     *  isOrdered = "$attributeRef.isOrdered()"
#if( $attributeRef.RefBy != -1)     *   ref-by = "$wizardUtils.getRefBy( $attributeRef.RefBy )"
#end
     *  
     * @uml.property name="$attributeRef.Name" multiplicity="(0 1)"
     * 
     */
	$eclipseUtils.intToModifier($attributeRef.getModifier()) $attributeRef.getAttributeClass()$eclipseUtils.intToDim($attributeRef.getDimensions()) $attributeRef.Name;

#end

#foreach($methodModel in $wizard.get("methods"))
    /**
     * $!methodModel.Description
     * @tigerstripe.method 
	 *  isAbstract = "$methodModel.isAbstract()"
     * 
     * @tigerstripe.property ts.id = "ossj.method"
     #foreach( $key in $methodModel.getOssjProperties().keySet() )
     *   $key = "$methodModel.getOssjProperties().getProperty( $key )"
     #end *
     * @uml.property name="$methodModel.MethodName" multiplicity="(0 1)"
     * 
     */
	$eclipseUtils.intToModifier($methodModel.getMethodModifier()) abstract $methodModel.getFinalReturnClass() ${methodModel.methodName}(
	#set( $firstPass = "true" )
	#foreach( $param in $methodModel.ParameterList )
		#if ( $firstPass == "false" )
		, 
		#end
		$param.getSignature()
		
		#set( $firstPass = "false" )
	#end
	);

#end

}