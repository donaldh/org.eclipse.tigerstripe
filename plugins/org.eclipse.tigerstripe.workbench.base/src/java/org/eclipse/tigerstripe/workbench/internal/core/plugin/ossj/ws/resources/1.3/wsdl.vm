#set ($resourceDir = "org/eclipse/tigerstripe/workbench/internal/core/plugin/ossj/ws/resources/1.3")
#*
  Copyright (c) 2007 Cisco Systems, Inc.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

   Contributors:
      E. Dillon (Cisco Systems, Inc.) - reformat for Code Open-Sourcing
*#
#set ($includeWSNotif = $pluginConfig.getProperties().getProperty("includeWSNotifications", "false"))
#set ($WsNotifLocation = $pluginConfig.getProperties().getProperty("WSNotificationsLocation", "http://www-128.ibm.com/developerworks/library/specification/ws-notification/WS-BaseN.wsdl"))
##
##
<?xml version="1.0" encoding="utf-8"?>
#parse ("$resourceDir/XMLHeader.vm")

<wsdl:definitions name="$model.Name"
	targetNamespace ="$wsdlName"
	xmlns:${prefix}="$wsdlName"
##	
## This next line is the XML schema namespace(s).. not the WSDL namespace	
#foreach($nRef in $schemaUtils.getNRefs()) 
	xmlns:$nRef.Prefix="$nRef.Namespace"    
#end
##
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
#if($includeWSNotif != "false")
	xmlns:wsnt="$ossjWsdlUtil.stripExtension($WsNotifLocation)"
#end
	>

#if($includeWSNotif != "false")
<wsdl:import namespace="$ossjWsdlUtil.stripExtension($WsNotifLocation)"
	location="$WsNotifLocation"/>
#else
<!-- Tigerstripe : WS Notification is disabled -->
#end
	<!-- Tigerstripe : WSDL Types -->
	<wsdl:types>
		<xsd:schema>
#foreach($nRef in $schemaUtils.getNRefs()) 
			<xsd:import namespace="$nRef.Namespace"
			    schemaLocation="$nRef.Location"/>
#end
		</xsd:schema>
	</wsdl:types>

	<!--  Tigerstripe : Message definitions -->
#foreach($entity in $artifact.ManagedEntities)
    <!-- Tigerstripe : Messages relating to $entity.Name -->
#parse ("$resourceDir/WSDLCreateMessages.vm")
#parse ("$resourceDir/WSDLGetMessages.vm")
#parse ("$resourceDir/WSDLSetMessages.vm")
#parse ("$resourceDir/WSDLRemoveMessages.vm")

#foreach($method in $entity.Artifact.Methods)
#if ($method.isInstanceMethod())
#parse ("$resourceDir/WSDLCustomMessages.vm")
#end
#end
	
#parse ("$resourceDir/WSDLQueryMessages.vm")
	
#end

    <!-- Tigerstripe : Messages for Interface artifact methods ( $artifact.Name ) -->
#foreach($method in $artifact.Methods)
	<wsdl:message name="$method.getName()Response">
		<wsdl:part name="parameters"
			element="$xsdNamespace:$method.getName()Response" />
	</wsdl:message>
	<wsdl:message name="$method.getName()Request">
		<wsdl:part name="parameters"
			element="$xsdNamespace:$method.getName()Request" />
	</wsdl:message>
	<wsdl:message name="$method.getName()Exception">
		<wsdl:part name="parameters"
			element="$xsdNamespace:$method.getName()Exception" />
	</wsdl:message>
		
#end


	<!--  Tigerstripe : Port type -->
	<wsdl:portType name="${model.Name}WSPort">
#foreach($entity in $artifact.ManagedEntities)
    <!-- Tigerstripe : Operations relating to $entity.Name -->
#parse ("$resourceDir/WSDLCreateOperations.vm")
#parse ("$resourceDir/WSDLGetOperations.vm")
#parse ("$resourceDir/WSDLSetOperations.vm")
#parse ("$resourceDir/WSDLRemoveOperations.vm")

#foreach($method in $entity.Artifact.Methods)
#if ($method.isInstanceMethod())
#parse ("$resourceDir/WSDLCustomOperations.vm")
#end
#end

#parse ("$resourceDir/WSDLQueryOperations.vm")

#end

    <!-- Tigerstripe : Operations for Interface artifact methods ( $artifact.Name ) -->
#foreach($method in $artifact.Methods)
		<wsdl:operation name="$method.getName()">
			<wsdl:input
				name="$method.getName()Request"
				message="${prefix}:$method.getName()Request" />
			<wsdl:output
				name="$method.getName()Response"
				message="${prefix}:$method.getName()Response" />
			<wsdl:fault
				name="$method.getName()Exception"
				message="${prefix}:$method.getName()Exception" />
		</wsdl:operation>
#end
	</wsdl:portType>


	<wsdl:binding name="${model.Name}SoapBinding"
		type="${prefix}:${model.Name}WSPort">
		<soap:binding style="document"
			transport="http://schemas.xmlsoap.org/soap/http" />
#foreach($entity in $artifact.ManagedEntities)
	    <!-- Tigerstripe : Bindings relating to $entity.Name -->
#parse ("$resourceDir/WSDLCreateBindings.vm")
#parse ("$resourceDir/WSDLGetBindings.vm")
#parse ("$resourceDir/WSDLSetBindings.vm")
#parse ("$resourceDir/WSDLRemoveBindings.vm")

#foreach($method in $entity.Artifact.Methods)
#if ($method.isInstanceMethod())
#parse ("$resourceDir/WSDLCustomBindings.vm")
#end
#end

#parse ("$resourceDir/WSDLQueryBindings.vm")
#end

#foreach($method in $artifact.Methods)
		<wsdl:operation name="$method.getName()">
		<soap:operation soapAction="$method.getName()" style="document" /> 
			<wsdl:input>
				<soap:body parts="parameters" use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body parts="parameters" use="literal" />
			</wsdl:output>
			<wsdl:fault name ="$method.getName()Exception"> 
				<soap:fault name ="$method.getName()Exception" use="literal"/>
			</wsdl:fault>
		</wsdl:operation>
#end
	</wsdl:binding>

#if($includeWSNotif != "false")
#parse ("$resourceDir/WS-Notification.vm")
#end
	
	<wsdl:service name="${model.Name}WebService">
		<wsdl:port name="${model.Name}WSPort"
			binding="${prefix}:${model.Name}SoapBinding">
			<soap:address location="http://localhost/${model.Name}WebService/${model.Name}" />
		</wsdl:port>
#if($includeWSNotif != "false")
		<wsdl:port name="NotificationProducerPort" binding="${prefix}:NotificationProducerSoapBinding">
 			<soap:address location="http://localhost/${model.Name}WebService/NotificationProducer"/>
 		</wsdl:port>
		<wsdl:port name="SubscriptionManagerPort" binding="${prefix}:SubscriptionManagerSoapBinding">
 			<soap:address location="http://localhost/${model.Name}WebService/SubscriptionManager"/>
 		</wsdl:port>
#end
	</wsdl:service>
</wsdl:definitions>
