##
#*
  Copyright (c) 2007 Cisco Systems, Inc.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

   Contributors:
      E. Dillon (Cisco Systems, Inc.) - reformat for Code Open-Sourcing
*#
## @@ XMLSchema
##
## Re-usable variables	
#set ($ns = $schemaUtils.DefaultPrefix)
#set ($resourceDir = "org/eclipse/tigerstripe/workbench/internal/core/plugin/ossjxml/resources/1.3")
##
## set Common schema defaults
#set ($commonSchemaLocation = $tsProject.ProjectDetails.getProperties().getProperty("ossj.common.schemaLocation",""))
#set ($coNS = $tsProject.ProjectDetails.getProperties().getProperty("ossj.common.namespacePrefix",""))
#set ($commonSchemaName = $tsProject.ProjectDetails.getProperties().getProperty("ossj.common.targetNamespace",""))
##
#set ($fieldRestriction = "true")
<?xml version="1.0" encoding="UTF-8"?>
#parse ("$resourceDir/XMLHeader.vm")

<schema 
#parse ("$resourceDir/XMLNamespaces.vm")
    <!-- Tigerstripe : Managed Entity Defintions =================================== -->
## If no facade is defined, iterate over all entities
## If facades exist, only iterate over entities managed by these facades.
## if where no facade has been defined, artifact == null
##
#if ( !$artifact ) 
#set ($targetEntities = $entities)
	<!-- Tigerstripe : No Interface Artifact defined  - using all entities defined in the Project -->
#else
#set ($targetEntities = $artifact.ManagedEntities)
	<!-- Tigerstripe : Using entities defined aganst the Interface artifact ( $artifact.Name )-->
#end
#foreach($entity in $targetEntities)
#parse ("$resourceDir/XMLentity.vm")
#end
    <!-- Tigerstripe : Managed Entity Operations =================================== -->
## NB If no facade, no operation nor queries to be defined
    <!-- Tigerstripe : Operations for entities defined aganst Interface artifacts -->
#foreach($session in $sessions)
#foreach($entity in $session.ManagedEntities)
##
	<!-- Tigerstripe : Managed Entity Operations for $entity.Name ( NB These may be overridden in session) ================== -->
#parse ("$resourceDir/XMLCreateOperations.vm")
#parse ("$resourceDir/XMLGetOperations.vm")
#parse ("$resourceDir/XMLSetOperations.vm")
#parse ("$resourceDir/XMLRemoveOperations.vm")
##
#foreach($method in $entity.Artifact.Methods)
#if ($method.isInstanceMethod())
#parse ("$resourceDir/XMLCustomOperations.vm")
#end
#end
## This one can't be auto-generated
#parse ("$resourceDir/XMLQueryOperations.vm")
##
#end
## Add the JVTSession's own methods as Operations
    <!-- Tigerstripe : Operations on the interface object itself =================================== -->
#foreach ($method in $session.Methods)
#parse ("$resourceDir/XMLSessionOperations.vm")
#end
#end
    <!-- Tigerstripe : Data Types =================================== -->
#foreach($datatype in $datatypes)
#parse ("$resourceDir/XMLdatatype.vm")
#end
    <!-- Tigerstripe : Enumerations =================================== -->
#foreach($enum in $enumerations)
#parse ("$resourceDir/XMLenum.vm")
#end
    <!-- Tigerstripe : Exceptions =================================== -->
#foreach($exception in $exceptions)
#parse ("$resourceDir/XMLexception.vm")
#end
    <!-- Tigerstripe : Events =================================== -->
##
#if ( !$artifact ) 
#set ($targetEvents = $events)
##	<!-- Tigerstripe : No Interface Artifact defined  - using all events defined in the Project -->
#else
#set ($targetEvents = $artifact.Events)
	<!-- Tigerstripe : Using events defined aganst the Interface artifact ( $artifact.Name )-->
#end
#foreach($event in $targetEvents)
#parse ("$resourceDir/XMLevent.vm")
#end
    <!-- Tigerstripe : Querys =================================== -->
##
#if ( !$artifact ) 
#set ($targetQueries = $queries)
	<!-- Tigerstripe : No Interface Artifact defined  - using all events defined in the Project -->
#else
#set ($targetQueries = $artifact.Queries)
	<!-- Tigerstripe : Using events defined aganst the Interface artifact ( $artifact.Name )-->
#end
#foreach($query in $targetQueries)
#parse ("$resourceDir/XMLquery.vm")
#end
    <!-- Tigerstripe : UpdateProcedures ========================= -->
##
#if ( !$artifact ) 
#set ($targetUpdates = $updateProcedures)
	<!-- Tigerstripe : No Interface Artifact defined  - using all Update Procedures defined in the Project -->
#else
#set ($targetUpdates = $artifact.UpdateProcedures)
	<!-- Tigerstripe : Using Update Procedures defined aganst the Interface artifact ( $artifact.Name )-->
#end    
#foreach($updateProcedure in $targetUpdates)
#parse ("$resourceDir/XMLupdateProcedure.vm")
#end    
</schema>