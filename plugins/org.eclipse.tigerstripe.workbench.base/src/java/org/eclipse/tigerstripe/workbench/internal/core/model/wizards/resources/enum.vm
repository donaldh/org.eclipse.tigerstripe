/*******************************************************************************
 * Created with Tigerstripe(tm) Workbench v.$runtime.getProperty("tigerstripe.feature.version")
 * Copyright (c) 2007 Cisco Systems, Inc.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * DO NOT EDIT THIS FILE - Created with Tigerstripe(tm) Workbench
 *
 *******************************************************************************/
#if ($wizard.get("packageName") != "")
package $wizard.get("packageName");
#end
/**
 * $!wizard.get("artifactDescription")
 *
 * @tigerstripe.enum
 *		isAbstract = "$wizard.get("isAbstract")"
#if ($wizard.get("baseType") != "")
 *	    base-type = "$wizard.get("baseType")"
#else
## If there is at least one constant, use the type as the baseType
#foreach($attributeRef in $wizard.get("constantList"))
#set ($bT = $attributeRef.getLabelClass())
#end
#if ($bT)
 *	    base-type = "$bT"
#else
## default to int base Type
 *	    base-type = "int"
#end
#end
 * @tigerstripe.interface package = "$wizard.get("interfacePackage")"
 *      generate = "$wizard.get("generate")"
 */
public abstract class $wizard.get("artifactName") {

#foreach($attributeRef in $wizard.get("constantList"))
    /**
     * $!attributeRef.Description
     * @tigerstripe.label
     *  value = '$attributeRef.Value'
     *  
     */
    $eclipseUtils.intToModifier($attributeRef.getModifier()) final static $attributeRef.getLabelClass() $attributeRef.Name = $attributeRef.Value;

#end
}