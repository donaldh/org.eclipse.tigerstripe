#if( $entity.getCreateFlavorDetailsStr("simple").Flag == "true" || $entity.getCreateFlavorDetailsStr("simple").Flag == "optional")
#*
  Copyright (c) 2007 Cisco Systems, Inc.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

   Contributors:
      E. Dillon (Cisco Systems, Inc.) - reformat for Code Open-Sourcing
*#
    <element name="create$util.capitalize(${entity.getName()})ByValueRequest">
        <annotation>
            <documentation>
                This is the Request for the create$util.capitalize(${entity.getName()})ByValue Operation
#if($entity.getCreateFlavorDetailsStr("simple").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($entity.FullyQualifiedName).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"" ).Name"  />
            </sequence>
        </complexType>
    </element>
    <element name="create$util.capitalize(${entity.getName()})ByValueResponse">
        <annotation>
            <documentation>
                This is the Response for the create$util.capitalize(${entity.getName()})ByValue Operation
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.keyInterfaceOf($entity.FullyQualifiedName).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"" ).KeyName"  />
            </sequence>
        </complexType>
    </element>
    <element name="create$util.capitalize(${entity.getName()})ByValueException">
        <annotation>
            <documentation>
                This is the Exception for the create$util.capitalize(${entity.getName()})ByValue Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultCreateFlavorDetailsStr("simple").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getCreateFlavorDetailsStr("simple").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getCreateFlavorDetailsStr("simple").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
#if( $entity.getCreateFlavorDetailsStr("bulkAtomic").Flag == "true" || $entity.getCreateFlavorDetailsStr("bulkAtomic").Flag == "optional")
    <element name="create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValuesRequest">
        <annotation>
            <documentation>
                This is the Request for the create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValues Operation
#if($entity.getCreateFlavorDetailsStr("bulkAtomic").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($entity.FullyQualifiedName).Name)s" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]" ).Name"  />
            </sequence>
        </complexType>
    </element>
    <element name="create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValuesResponse">
        <annotation>
            <documentation>
                This is the Response for the create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValues Operation
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.keyInterfaceOf($entity.FullyQualifiedName).Name)s" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]" ).KeyName"  />
            </sequence>
        </complexType>
    </element>
    <element name="create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValuesException">
        <annotation>
            <documentation>
                This is the Exception for the create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValues Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultCreateFlavorDetailsStr("bulkAtomic").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getCreateFlavorDetailsStr("bulkAtomic").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getCreateFlavorDetailsStr("bulkAtomic").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
#if( $entity.getCreateFlavorDetailsStr("bulkAtomicByKeys").Flag == "true" || $entity.getCreateFlavorDetailsStr("bulkAtomicByKeys").Flag == "optional")
    <element name="create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeysRequest">
        <annotation>
            <documentation>
                This is the Request for the create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeys Operation
#if($entity.getCreateFlavorDetailsStr("bulkAtomicByKeys").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.keyInterfaceOf($entity.FullyQualifiedName).Name)s" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]" ).KeyName"  />
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($entity.FullyQualifiedName).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"" ).Name"  />
            </sequence>
        </complexType>
    </element>
    <element name="create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeysResponse">
        <annotation>
            <documentation>
                This is the Response for the create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeys Operation
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.keyInterfaceOf($entity.FullyQualifiedName).Name)s" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]" ).KeyName"  />
            </sequence>
        </complexType>
    </element>
    <element name="create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeysException">
        <annotation>
            <documentation>
                This is the Exception for the create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeys Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultCreateFlavorDetailsStr("bulkAtomicByKeys").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getCreateFlavorDetailsStr("bulkAtomicByKeys").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getCreateFlavorDetailsStr("bulkAtomicByKeys").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
#if( $entity.getCreateFlavorDetailsStr("bulkBestEffort").Flag == "true" || $entity.getCreateFlavorDetailsStr("bulkBestEffort").Flag == "optional")
    <element name="tryCreate$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValuesRequest">
        <annotation>
            <documentation>
                This is the Request for the tryCreate$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValues Operation
#if($entity.getCreateFlavorDetailsStr("bulkBestEffort").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($entity.FullyQualifiedName).Name)s" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]" ).Name"  />
            </sequence>
        </complexType>
    </element>
    <element name="tryCreate$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValuesResponse">
        <annotation>
            <documentation>
                This is the Response for the tryCreate$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValues Operation
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.keyResultInterfaceOf($entity.FullyQualifiedName).Name)s" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]").KeyResultName"/>
            </sequence>
        </complexType>
    </element>
    <element name="tryCreate$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValuesException">
        <annotation>
            <documentation>
                This is the Exception for the tryCreate$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValues Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultCreateFlavorDetailsStr("bulkBestEffort").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getCreateFlavorDetailsStr("bulkBestEffort").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getCreateFlavorDetailsStr("bulkBestEffort").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
#if( $entity.getCreateFlavorDetailsStr("bulkBestEffortByKeys").Flag == "true" || $entity.getCreateFlavorDetailsStr("bulkBestEffortByKeys").Flag == "optional")
    <element name="tryCreate$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeysRequest">
        <annotation>
            <documentation>
                This is the Request for the tryCreate$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeys Operation
#if($entity.getCreateFlavorDetailsStr("bulkBestEffortByKeys").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.keyInterfaceOf($entity.FullyQualifiedName).Name)s" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]" ).KeyName"  />
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($entity.FullyQualifiedName).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"" ).Name"  />
            </sequence>
        </complexType>
    </element>
    <element name="tryCreate$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeysResponse">
        <annotation>
            <documentation>
                This is the Response for the tryCreate$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeys Operation
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.keyResultInterfaceOf($entity.FullyQualifiedName).Name)s" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]").KeyResultName"/>
            </sequence>
        </complexType>
    </element>
    <element name="tryCreate$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeysException">
        <annotation>
            <documentation>
                This is the Exception for the tryCreate$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeys Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultCreateFlavorDetailsStr("bulkBestEffortByKeys").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getCreateFlavorDetailsStr("bulkBestEffortByKeys").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getCreateFlavorDetailsStr("bulkBestEffortByKeys").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
#if( $entity.getCreateFlavorDetailsStr("byAutoNaming").Flag == "true" || $entity.getCreateFlavorDetailsStr("byAutoNaming").Flag == "optional")
    <element name="create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByAutoNamingRequest">
        <annotation>
            <documentation>
                This is the Request for the create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByAutoNaming Operation
#if($entity.getCreateFlavorDetailsStr("byAutoNaming").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="howMany" type="int"/>
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($entity.FullyQualifiedName).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"" ).Name"  />
            </sequence>
        </complexType>
    </element>
    <element name="create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByAutoNamingResponse">
        <annotation>
            <documentation>
                This is the Response for the create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByAutoNaming Operation
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.keyInterfaceOf($entity.FullyQualifiedName).Name)s" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]" ).KeyName"  />
            </sequence>
        </complexType>
    </element>
    <element name="create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByAutoNamingException">
        <annotation>
            <documentation>
                This is the Exception for the create$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByAutoNaming Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultCreateFlavorDetailsStr("byAutoNaming").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getCreateFlavorDetailsStr("byAutoNaming").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getCreateFlavorDetailsStr("byAutoNaming").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
