#if( $entity.getSetFlavorDetailsStr("simple").Flag == "true" || $entity.getSetFlavorDetailsStr("simple").Flag == "optional")
#*
  Copyright (c) 2007 Cisco Systems, Inc.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

   Contributors:
      E. Dillon (Cisco Systems, Inc.) - reformat for Code Open-Sourcing
*#
    <element name="set$util.capitalize(${entity.getName()})ByValueRequest">
        <annotation>
            <documentation>
                This is the Request for the set$util.capitalize(${entity.getName()})ByValue Operation
#if($entity.getSetFlavorDetailsStr("simple").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($entity.FullyQualifiedName).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"" ).Name"  />
                <element name="resyncRequired" type="boolean"/>
            </sequence>
        </complexType>
    </element>
    <element name="set$util.capitalize(${entity.getName()})ByValueResponse">
        <annotation>
            <documentation>
                This is the Response for the set$util.capitalize(${entity.getName()})ByValue Operation
            </documentation>
        </annotation>
        <complexType>
            <sequence>
            </sequence>
        </complexType>
    </element>
    <element name="set$util.capitalize(${entity.getName()})ByValueException">
        <annotation>
            <documentation>
                This is the Exception for the set$util.capitalize(${entity.getName()})ByValue Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultSetFlavorDetailsStr("simple").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getSetFlavorDetailsStr("simple").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getSetFlavorDetailsStr("simple").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
#if( $entity.getSetFlavorDetailsStr("bulkAtomic").Flag == "true" || $entity.getSetFlavorDetailsStr("bulkAtomic").Flag == "optional")
    <element name="set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValuesRequest">
        <annotation>
            <documentation>
                This is the Request for the set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValues Operation
#if($entity.getSetFlavorDetailsStr("bulkAtomic").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($entity.FullyQualifiedName).Name)s" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]" ).Name"  />
                <element name="resyncRequired" type="boolean"/>
            </sequence>
        </complexType>
    </element>
    <element name="set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValuesResponse">
        <annotation>
            <documentation>
                This is the Response for the set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValues Operation
            </documentation>
        </annotation>
        <complexType>
            <sequence>
            </sequence>
        </complexType>
    </element>
    <element name="set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValuesException">
        <annotation>
            <documentation>
                This is the Exception for the set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValues Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultSetFlavorDetailsStr("bulkAtomic").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getSetFlavorDetailsStr("bulkAtomic").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getSetFlavorDetailsStr("bulkAtomic").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
#if( $entity.getSetFlavorDetailsStr("bulkAtomicByKeys").Flag == "true" || $entity.getSetFlavorDetailsStr("bulkAtomicByKeys").Flag == "optional")
    <element name="set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeysRequest">
        <annotation>
            <documentation>
                This is the Request for the set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeys Operation
#if($entity.getSetFlavorDetailsStr("bulkAtomicByKeys").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.keyInterfaceOf($entity.FullyQualifiedName).Name)s" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]" ).KeyName"  />
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($entity.FullyQualifiedName).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"" ).Name"  />
            </sequence>
        </complexType>
    </element>
    <element name="set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeysResponse">
        <annotation>
            <documentation>
                This is the Response for the set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeys Operation
            </documentation>
        </annotation>
        <complexType>
            <sequence>
            </sequence>
        </complexType>
    </element>
    <element name="set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeysException">
        <annotation>
            <documentation>
                This is the Exception for the set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeys Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultSetFlavorDetailsStr("bulkAtomicByKeys").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getSetFlavorDetailsStr("bulkAtomicByKeys").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getSetFlavorDetailsStr("bulkAtomicByKeys").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
#if( $entity.getSetFlavorDetailsStr("byTemplate").Flag == "true" || $entity.getSetFlavorDetailsStr("byTemplate").Flag == "optional")
    <element name="set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplateRequest">
        <annotation>
            <documentation>
                This is the Request for the set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplate Operation
#if($entity.getSetFlavorDetailsStr("byTemplate").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="template" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"" ).Name"  />
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($entity.FullyQualifiedName).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"" ).Name"  />
            </sequence>
        </complexType>
    </element>
    <element name="set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplateResponse">
        <annotation>
            <documentation>
                This is the Response for the set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplate Operation
            </documentation>
        </annotation>
        <complexType>
            <sequence>
            </sequence>
        </complexType>
    </element>
    <element name="set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplateException">
        <annotation>
            <documentation>
                This is the Exception for the set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplate Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultSetFlavorDetailsStr("byTemplate").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getSetFlavorDetailsStr("byTemplate").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getSetFlavorDetailsStr("byTemplate").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
#if( $entity.getSetFlavorDetailsStr("byTemplates").Flag == "true" || $entity.getSetFlavorDetailsStr("byTemplates").Flag == "optional")
    <element name="set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplatesRequest">
        <annotation>
            <documentation>
                This is the Request for the set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplates Operation
#if($entity.getSetFlavorDetailsStr("byTemplates").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="templates" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]" ).Name"  />
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($entity.FullyQualifiedName).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"" ).Name"  />
            </sequence>
        </complexType>
    </element>
    <element name="set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplatesResponse">
        <annotation>
            <documentation>
                This is the Response for the set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplates Operation
            </documentation>
        </annotation>
        <complexType>
            <sequence>
            </sequence>
        </complexType>
    </element>
    <element name="set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplatesException">
        <annotation>
            <documentation>
                This is the Exception for the set$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplates Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultSetFlavorDetailsStr("byTemplates").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getSetFlavorDetailsStr("byTemplates").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getSetFlavorDetailsStr("byTemplates").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
#if( $entity.getSetFlavorDetailsStr("bulkBestEffort").Flag == "true" || $entity.getSetFlavorDetailsStr("bulkBestEffort").Flag == "optional")
    <element name="trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValuesRequest">
        <annotation>
            <documentation>
                This is the Request for the trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValues Operation
#if($entity.getSetFlavorDetailsStr("bulkBestEffort").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($entity.FullyQualifiedName).Name)s" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]" ).Name"  />
                <element name="resyncRequired" type="boolean"/>
            </sequence>
        </complexType>
    </element>
    <element name="trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValuesResponse">
        <annotation>
            <documentation>
                This is the Response for the trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValues Operation
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.keyResultInterfaceOf($entity.FullyQualifiedName).Name)s" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]").KeyResultName"/>
            </sequence>
        </complexType>
    </element>
    <element name="trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValuesException">
        <annotation>
            <documentation>
                This is the Exception for the trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByValues Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultSetFlavorDetailsStr("bulkBestEffort").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getSetFlavorDetailsStr("bulkBestEffort").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getSetFlavorDetailsStr("bulkBestEffort").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
#if( $entity.getSetFlavorDetailsStr("bulkBestEffortByKeys").Flag == "true" || $entity.getSetFlavorDetailsStr("bulkBestEffortByKeys").Flag == "optional")
    <element name="trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeysRequest">
        <annotation>
            <documentation>
                This is the Request for the trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeys Operation
#if($entity.getSetFlavorDetailsStr("bulkBestEffortByKeys").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.keyInterfaceOf($entity.FullyQualifiedName).Name)s" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]" ).KeyName"  />
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($entity.FullyQualifiedName).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"" ).Name"  />
            </sequence>
        </complexType>
    </element>
    <element name="trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeysResponse">
        <annotation>
            <documentation>
                This is the Response for the trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeys Operation
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.keyResultInterfaceOf($entity.FullyQualifiedName).Name)s" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]").KeyResultName"/>
            </sequence>
        </complexType>
    </element>
    <element name="trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeysException">
        <annotation>
            <documentation>
                This is the Exception for the trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeys Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultSetFlavorDetailsStr("bulkBestEffortByKeys").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getSetFlavorDetailsStr("bulkBestEffortByKeys").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getSetFlavorDetailsStr("bulkBestEffortByKeys").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
#if( $entity.getSetFlavorDetailsStr("byTemplateBestEffort").Flag == "true" || $entity.getSetFlavorDetailsStr("byTemplateBestEffort").Flag == "optional")
    <element name="trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplateRequest">
        <annotation>
            <documentation>
                This is the Request for the trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplate Operation
#if($entity.getSetFlavorDetailsStr("byTemplateBestEffort").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <complexContent>
                <extension base="${coNS}:IteratorRequest">
                <sequence>
                    <element name="template" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"" ).Name"  />
                    <element name="$util.unCapitalize($ossjUtil.interfaceOf($entity.FullyQualifiedName).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"" ).Name"  />
                    <element name="failuresOnly" type="boolean"/>
                </sequence>
                </extension>
            </complexContent>
        </complexType>
    </element>
    <element name="trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplateResponse">
        <annotation>
            <documentation>
                This is the Response for the trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplate Operation
            </documentation>
        </annotation>
        <complexType>
            <complexContent>
                <extension base="${coNS}:IteratorResponse">
                <sequence>
                    <element name="results" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]").KeyResultName"/>
                </sequence>
                </extension>
            </complexContent>
        </complexType>
    </element>
    <element name="trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplateException">
        <annotation>
            <documentation>
                This is the Exception for the trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplate Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultSetFlavorDetailsStr("byTemplateBestEffort").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getSetFlavorDetailsStr("byTemplateBestEffort").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getSetFlavorDetailsStr("byTemplateBestEffort").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
#if( $entity.getSetFlavorDetailsStr("byTemplatesBestEffort").Flag == "true" || $entity.getSetFlavorDetailsStr("byTemplatesBestEffort").Flag == "optional")
    <element name="trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplatesRequest">
        <annotation>
            <documentation>
                This is the Request for the trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplates Operation
#if($entity.getSetFlavorDetailsStr("byTemplatesBestEffort").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <complexContent>
                <extension base="${coNS}:IteratorRequest">
                <sequence>
                    <element name="templates" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]" ).Name"  />
                    <element name="$util.unCapitalize($ossjUtil.interfaceOf($entity.FullyQualifiedName).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"" ).Name"  />
                    <element name="failuresOnly" type="boolean"/>
                </sequence>
                </extension>
            </complexContent>
        </complexType>
    </element>
    <element name="trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplatesResponse">
        <annotation>
            <documentation>
                This is the Response for the trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplates Operation
            </documentation>
        </annotation>
        <complexType>
            <complexContent>
                <extension base="${coNS}:IteratorResponse">
                <sequence>
                    <element name="results" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]").KeyResultName"/>
                </sequence>
                </extension>
            </complexContent>
        </complexType>
    </element>
    <element name="trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplatesException">
        <annotation>
            <documentation>
                This is the Exception for the trySet$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplates Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultSetFlavorDetailsStr("byTemplatesBestEffort").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getSetFlavorDetailsStr("byTemplatesBestEffort").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getSetFlavorDetailsStr("byTemplatesBestEffort").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
