#if( $entity.getGetFlavorDetailsStr("simpleByKey").Flag == "true" || $entity.getGetFlavorDetailsStr("simpleByKey").Flag == "optional")
#*
  Copyright (c) 2007 Cisco Systems, Inc.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

   Contributors:
      E. Dillon (Cisco Systems, Inc.) - reformat for Code Open-Sourcing
*#
    <element name="get$util.capitalize(${entity.getName()})ByKeyRequest">
        <annotation>
            <documentation>
                This is the Request for the get$util.capitalize(${entity.getName()})ByKey Operation
#if($entity.getGetFlavorDetailsStr("simpleByKey").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.keyInterfaceOf($entity.FullyQualifiedName).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"" ).KeyName"  />
                <element name="attrNames" type="${coNS}:ArrayOfString" />
            </sequence>
        </complexType>
    </element>
    <element name="get$util.capitalize(${entity.getName()})ByKeyResponse">
        <annotation>
            <documentation>
                This is the Response for the get$util.capitalize(${entity.getName()})ByKey Operation
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($entity.FullyQualifiedName).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"" ).Name"  />
            </sequence>
        </complexType>
    </element>
    <element name="get$util.capitalize(${entity.getName()})ByKeyException">
        <annotation>
            <documentation>
                This is the Exception for the get$util.capitalize(${entity.getName()})ByKey Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultGetFlavorDetailsStr("simpleByKey").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getGetFlavorDetailsStr("simpleByKey").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getGetFlavorDetailsStr("simpleByKey").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
#if( $entity.getGetFlavorDetailsStr("bulkAtomicByKeys").Flag == "true" || $entity.getGetFlavorDetailsStr("bulkAtomicByKeys").Flag == "optional")
    <element name="get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeysRequest">
        <annotation>
            <documentation>
                This is the Request for the get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeys Operation
#if($entity.getGetFlavorDetailsStr("bulkAtomicByKeys").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.keyInterfaceOf($entity.FullyQualifiedName).Name)s" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]" ).KeyName"  />
                <element name="attrNames" type="${coNS}:ArrayOfString" />
            </sequence>
        </complexType>
    </element>
    <element name="get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeysResponse">
        <annotation>
            <documentation>
                This is the Response for the get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeys Operation
            </documentation>
        </annotation>
        <complexType>
            <sequence>
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($entity.FullyQualifiedName).Name)s" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]" ).Name"  />
            </sequence>
        </complexType>
    </element>
    <element name="get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeysException">
        <annotation>
            <documentation>
                This is the Exception for the get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByKeys Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultGetFlavorDetailsStr("bulkAtomicByKeys").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getGetFlavorDetailsStr("bulkAtomicByKeys").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getGetFlavorDetailsStr("bulkAtomicByKeys").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
#if( $entity.getGetFlavorDetailsStr("byTemplate").Flag == "true" || $entity.getGetFlavorDetailsStr("byTemplate").Flag == "optional")
    <element name="get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplateRequest">
        <annotation>
            <documentation>
                This is the Request for the get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplate Operation
#if($entity.getGetFlavorDetailsStr("byTemplate").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <complexContent>
                <extension base="${coNS}:IteratorRequest">
                <sequence>
                    <element name="template" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"" ).Name"  />
                    <element name="attrNames" type="${coNS}:ArrayOfString" />
                </sequence>
                </extension>
            </complexContent>
        </complexType>
    </element>
    <element name="get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplateResponse">
        <annotation>
            <documentation>
                This is the Response for the get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplate Operation
            </documentation>
        </annotation>
        <complexType>
            <complexContent>
                <extension base="${coNS}:IteratorResponse">
                <sequence>
                    <element name="results" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]").Name"/>
                </sequence>
                </extension>
            </complexContent>
        </complexType>
    </element>
    <element name="get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplateException">
        <annotation>
            <documentation>
                This is the Exception for the get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplate Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultGetFlavorDetailsStr("byTemplate").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getGetFlavorDetailsStr("byTemplate").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getGetFlavorDetailsStr("byTemplate").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
#if( $entity.getGetFlavorDetailsStr("byTemplates").Flag == "true" || $entity.getGetFlavorDetailsStr("byTemplates").Flag == "optional")
    <element name="get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplatesRequest">
        <annotation>
            <documentation>
                This is the Request for the get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplates Operation
#if($entity.getGetFlavorDetailsStr("byTemplates").Flag == "optional")
                This operation is OPTIONAL
#else
                This operation is MANDATORY
#end
            </documentation>
        </annotation>
        <complexType>
            <complexContent>
                <extension base="${coNS}:IteratorRequest">
                <sequence>
                    <element name="templates" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]" ).Name"  />
                    <element name="attrNames" type="${coNS}:ArrayOfString" />
                </sequence>
                </extension>
            </complexContent>
        </complexType>
    </element>
    <element name="get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplatesResponse">
        <annotation>
            <documentation>
                This is the Response for the get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplates Operation
            </documentation>
        </annotation>
        <complexType>
            <complexContent>
                <extension base="${coNS}:IteratorResponse">
                <sequence>
                    <element name="results" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($entity.FullyQualifiedName),$entity.FullyQualifiedName,"[]").Name"/>
                </sequence>
                </extension>
            </complexContent>
        </complexType>
    </element>
    <element name="get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplatesException">
        <annotation>
            <documentation>
                This is the Exception for the get$util.capitalize($ossjUtil.pluralisedForm(${entity.getName()}))ByTemplates Operation
                The following exceptions are returned if an error occurs.
            </documentation>
        </annotation>
        <complexType>
            <choice>
#foreach($exception in $entity.getDefaultGetFlavorDetailsStr("byTemplates").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#foreach($exception in $entity.getGetFlavorDetailsStr("byTemplates").Exceptions)
                <element name="$util.unCapitalize($ossjUtil.interfaceOf($exception).Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact($exception),$exception,"").Name"/>
#end
#if($entity.getGetFlavorDetailsStr("byTemplates").Flag == "optional")
                <element name="$util.unCapitalize($ossjUtil.interfaceOf("javax.oss.OssUnsupportedOperationException").Name)" type="$ossjXmlUtil.typeNSOf($schemaUtils.getPrefixForArtifact("javax.oss.OssUnsupportedOperationException"),"javax.oss.OssUnsupportedOperationException","").Name"/>
#end
            </choice>
        </complexType>
    </element>
#end
