/*******************************************************************************
 * Created with Tigerstripe(tm) Workbench v.$runtime.getProperty("tigerstripe.feature.version")
 * Copyright (c) 2007 Cisco Systems, Inc.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * DO NOT EDIT THIS FILE - Created with Tigerstripe(tm) Workbench
 *
 *******************************************************************************/
#if ($wizard.get("packageName") != "")
package $wizard.get("packageName");
#end
/**
 * $!wizard.get("artifactDescription")
 *
 * @tigerstripe.associationClass
 *		isAbstract = "$wizard.get("isAbstract")"
 *
 * @tigerstripe.interface package = "$wizard.get("interfacePackage")"
 *      generate = "$wizard.get("generate")"
 */
public abstract class $wizard.get("artifactName")
#if( $wizard.get("extendedArtifact") != "" )
  extends $wizard.get("extendedArtifact")
#end {

	/**
	 *	@tigerstripe.association-aEnd
	 *    aggregation = "$!wizard.get("aEndAggregation")"
	 *    changeable = "$!wizard.get("aEndChangeable")"
	 *    multiplicity = "$!wizard.get("aEndMultiplicity")"
	 *    ordered = "$!wizard.get("aEndIsOrdered")"
	 *    navigable = "$!wizard.get("aEndIsNavigable")"
	 *
	 */	
	public static $!wizard.get("aEndType") $!wizard.get("aEndName") = null;
	
	/**
	 *	@tigerstripe.association-zEnd
	 *    aggregation = "$!wizard.get("zEndAggregation")"
	 *    changeable = "$!wizard.get("zEndChangeable")"
	 *    multiplicity = "$!wizard.get("zEndMultiplicity")"
	 *    ordered = "$!wizard.get("zEndIsOrdered")"
	 *    navigable = "$!wizard.get("zEndIsNavigable")"
	 *
	 */	
	public static $!wizard.get("zEndType") $!wizard.get("zEndName") = null;
	
#foreach($attributeRef in $wizard.get("attributes"))
    /**
     * $!attributeRef.Description
     * @tigerstripe.field 
     *  isOptional = "$attributeRef.isOptional()"
     *  isReadOnly = "$attributeRef.isReadOnly()"
     *  isUnique = "$attributeRef.isUnique()"
     *  isOrdered = "$attributeRef.isOrdered()"
#if( $attributeRef.RefBy != -1)     *   ref-by = "$wizardUtils.getRefBy( $attributeRef.RefBy )"
#end
     * @uml.property name="$attributeRef.Name" multiplicity="(0 1)"
     * 
     */
	$eclipseUtils.intToModifier($attributeRef.getModifier()) $attributeRef.getAttributeClass()$eclipseUtils.intToDim($attributeRef.getDimensions()) $attributeRef.Name;

#end
}