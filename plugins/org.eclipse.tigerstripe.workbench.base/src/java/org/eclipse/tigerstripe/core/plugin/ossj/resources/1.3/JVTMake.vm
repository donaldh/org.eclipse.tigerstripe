## Need to say if a "String type" is needed because the type is meant to be extended to multiple child types
#*
  Copyright (c) 2007 Cisco Systems, Inc.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

   Contributors:
      E. Dillon (Cisco Systems, Inc.) - reformat for Code Open-Sourcing
*#
##(default is true - ie is is needed).
## Must have for dataType - Question about for Entity
#set ($makeMake = "true")
#set ($needAttributeGetter = "false")
#set ($makeWithString = "true")
#if ($fType.type.isDatatype())
#set ($needAttributeGetter = "true")
#set ($makeFQN = "$ossjUtil.interfaceOf($fType.type.FullyQualifiedName).FullyQualifiedName")
#set ($makeName = "$ossjUtil.interfaceOf($fType.type.FullyQualifiedName).Name")
#if ($fType.type.Artifact.IStandardSpecifics.isSingleExtensionType())
#set ($makeWithString = "false")
#end
#elseif ($fType.type.isEntityType())
#set ($needAttributeGetter = "true")
#if ($fType.type.Artifact.IStandardSpecifics.isSessionFactoryMethods())
#set ($makeMake = "false")
#end
#if($fType.isRefByValue())
#set ($makeFQN = "$ossjUtil.interfaceOf($fType.type.FullyQualifiedName).FullyQualifiedName")
#set ($makeName = "$ossjUtil.interfaceOf($fType.type.FullyQualifiedName).Name")
#if ($fType.type.Artifact.IStandardSpecifics.isSingleExtensionType())
#set ($makeWithString = "false")
#end
#elseif ($fType.isRefByKey())
#set ($makeFQN = "$ossjUtil.keyInterfaceOf($fType.type.FullyQualifiedName).FullyQualifiedName")
#set ($makeName = "$ossjUtil.keyInterfaceOf($fType.type.FullyQualifiedName).Name")
#if ($fType.type.Artifact.IStandardSpecifics.isSingleExtensionType())
#set ($makeWithString = "false")
#end
#elseif ($fType.isRefByKeyResult())
#set ($makeFQN = "$ossjUtil.keyResultInterfaceOf($fType.type.FullyQualifiedName).FullyQualifiedName")
#set ($makeName = "$ossjUtil.keyResultInterfaceOf($fType.type.FullyQualifiedName).Name")
#if ($fType.type.Artifact.IStandardSpecifics.isSingleExtensionType())
#set ($makeWithString = "false")
#end
#end
#end
##
#if  ($fType.type.isArray())
##### Substitute with ties
#if  ($makeName.endsWith("ty"))
#set ($makeName = $ossjUtil.pluralise($makeName))
#end
#### End of substitution
#if ($makeWithString == "true")
#set ($toMake = "s(int howMany , String typeToMake)")
#else
#set ($toMake = "s(int howMany)")
#end
#else
#if ($makeWithString == "true")
#set ($toMake = "(String typeToMake)")
#else
#set ($toMake = "()")
#end
#end
#if ($makeMake == "true")
## Only need this thing for those attributes whose types are "designed to be extended"
## At present (for this version - make that all of them that are datatype or Entity)
## Should really check the flag as well.
##if ($needAttributeGetter == "true")
##   /**
##    * 
##    * Attribute Type getter for $fName
##    *
##    * @return the valid set of types for the $fName field.
##    * 
##    */
##        public String[] attributeTypeFor$util.capitalize($fName)();
##end

    /**
    * Factory method for $fType.type.Name.
    *
#if  ($fType.type.isArray())
    * @param howMany - Number of instances to make
#end
#if ($makeWithString == "true")
    * @param typeToMake - name of the type to be made
#end
    * @return a new instance of $fType.type.Name
    *
    * @throws java.lang.IllegalArgumentException - if the argument is invalid
    */
    public $makeFQN$fType.type.Dimensions make$makeName$toMake
         throws java.lang.IllegalArgumentException;

#end