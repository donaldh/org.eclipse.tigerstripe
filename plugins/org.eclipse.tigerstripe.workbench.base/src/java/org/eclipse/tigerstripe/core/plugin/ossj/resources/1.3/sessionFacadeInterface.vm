#if ($ossjUtil.interfaceOf($artifact.FullyQualifiedName).Generate)
#*
  Copyright (c) 2007 Cisco Systems, Inc.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

   Contributors:
      E. Dillon (Cisco Systems, Inc.) - reformat for Code Open-Sourcing
*#
#set ($resourceDir = "org/eclipse/tigerstripe/core/plugin/ossj/resources/1.3")
#parse ("$resourceDir/lib/sessionMacros.vm")
#parse("$resourceDir/JVTFileHeader.vm")

#parse("$resourceDir/JVTComment.vm")
#if ($artifact.hasExtends())
#set ($extends = "$ossjUtil.interfaceOf($artifact.Extends.FullyQualifiedName).FullyQualifiedName")
#else
#set ($extends ="javax.oss.JVTSession")
#end
#if ($extends != "${model.package}.${model.Name}")
public interface $model.Name
        extends $extends {
#else 
public interface $model.Name {
#end
#foreach($label in $artifact.Labels)
#parse ("$resourceDir/JVTConstants.vm")
#end
#foreach($entity in $artifact.ManagedEntities)

/**
 * Create a Value Type object for a specific $util.capitalize(${entity.getName()}) type.
 *<p>
 * Not to be confused with the creation of a $util.capitalize(${entity.getName()}).
 *<p>
 * The Session Bean is used as a factory for the creation of Value types.
 *
 * @return A $ossjUtil.interfaceOf(${entity.FullyQualifiedName}).Name type object
 * @param valueType The fully qualified type of the $ossjUtil.interfaceOf(${entity.FullyQualifiedName}).Name to be created.
 * @exception javax.oss.OssIllegalArgumentException Invalid Arguments
 * @exception java.rmi.RemoteException           System Level Exception
 */

    public ${ossjUtil.interfaceOf(${entity.FullyQualifiedName}).FullyQualifiedName} make$util.capitalize(${ossjUtil.interfaceOf(${entity.FullyQualifiedName}).Name})(String valueType)
    throws javax.oss.OssIllegalArgumentException,
           java.rmi.RemoteException;

#parse ("$resourceDir/JVTCreateOperations.vm")
#parse ("$resourceDir/JVTGetOperations.vm")
#parse ("$resourceDir/JVTSetOperations.vm")
#parse ("$resourceDir/JVTRemoveOperations.vm")

#foreach($method in $entity.Artifact.Methods)
#if ($method.isInstanceMethod())
#parse ("$resourceDir/JVTCustomOperations.vm")
#end
#end
#end
#*

Remove the makeQuery etc as this is in JVTSession

#if( !$artifact.NamedQueries.isEmpty())
	
/**
 * Query using a Query Value.
 *
 * @param queryValue 
 * @exception javax.oss.OssIllegalArgumentException Invalid Arguments
 * @exception java.rmi.RemoteException           System Level Exception
 */
    public javax.oss.NamedQueryResponse query( javax.oss.NamedQueryValue queryValue)
    throws javax.oss.OssIllegalArgumentException,
           java.rmi.RemoteException;

/**
 * Create a NamedQueryValue Type object for a specific query type.
 *
 * The Session Bean is used as a factory for the creation of Value types.
 *
 * @param valueType The fully qualified type of the NamedQueryValue to be created.
 * @exception javax.oss.OssIllegalArgumentException Invalid Arguments
 * @exception java.rmi.RemoteException           System Level Exception
 */

    public javax.oss.NamedQueryValue makeQuery(String valueType)
    throws javax.oss.OssIllegalArgumentException,
           java.rmi.RemoteException;

#end

#if (!$artifact.ExposedUpdateProcedures.isEmpty())
	
/**
 * Update using an UpdateProcedure Value.
 *
 * @param updateprocedureValue 
 * @exception javax.oss.OssIllegalArgumentException Invalid Arguments
 * @exception java.rmi.RemoteException           System Level Exception
 */
    public javax.oss.UpdateProcedureResponse update( javax.oss.UpdateProcedureValue updateprocedureValue)
    throws javax.oss.OssIllegalArgumentException,
           java.rmi.RemoteException;
	

/**
 * Create a Value Type object for a specific update procedure type.
 *
 * The Session Bean is used as a factory for the creation of Value types.
 *
 * @param valueType The fully qualified type of the updateProcedure to be created.
 * @exception javax.oss.OssIllegalArgumentException Invalid Arguments
 * @exception java.rmi.RemoteException           System Level Exception
 */

    public javax.oss.UpdateProcedureValue makeUpdateProcedure(String valueType)
    throws javax.oss.OssIllegalArgumentException,
           java.rmi.RemoteException;

#end
*#
#foreach($method in $artifact.Methods)
#parse ("$resourceDir/JVTMethods.vm")
#end

}
#end